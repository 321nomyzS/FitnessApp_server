# Generated by Django 5.0 on 2024-09-04 22:44

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import trener.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CareLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Poziom pielęgnacji')),
                ('description', models.TextField(blank=True, verbose_name='Opis')),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseLanguage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('language_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='GeneralWorkout',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('visibility', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='LightRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Wymagania świetlne')),
                ('description', models.TextField(blank=True, verbose_name='Opis')),
            ],
        ),
        migrations.CreateModel(
            name='WaterNeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Potrzeba wody')),
                ('description', models.TextField(blank=True, verbose_name='Opis')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=trener.models.person_directory_path)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('active_until', 'Active until specific date')], default='active', max_length=15)),
                ('active_until', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('short_description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to=trener.models.exercise_directory_path)),
                ('video_link', models.URLField(blank=True, null=True)),
                ('html_content', models.TextField()),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trener.exerciselanguage')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trener.exercisetype')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalWorkout',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('visibility', models.BooleanField()),
                ('workout_date', models.DateField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa')),
                ('description', models.TextField(verbose_name='Opis')),
                ('image', models.ImageField(upload_to='images/', verbose_name='Zdjęcie')),
                ('is_indoor', models.BooleanField(default=True, verbose_name='Do uprawy wewnątrz')),
                ('care_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trener.carelevel', verbose_name='Poziom pielęgnacji')),
                ('light_requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trener.lightrequirement', verbose_name='Wymagania świetlne')),
                ('water_need', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trener.waterneed', verbose_name='Potrzeba wody')),
            ],
        ),
        migrations.AddField(
            model_name='person',
            name='plants',
            field=models.ManyToManyField(related_name='owners', to='trener.plant'),
        ),
        migrations.CreateModel(
            name='WorkoutExercise',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trener.exercise')),
                ('general_workout', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trener.generalworkout')),
                ('personal_workout', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trener.personalworkout')),
            ],
        ),
        migrations.AddField(
            model_name='personalworkout',
            name='exercises',
            field=models.ManyToManyField(through='trener.WorkoutExercise', to='trener.exercise'),
        ),
        migrations.AddField(
            model_name='generalworkout',
            name='exercises',
            field=models.ManyToManyField(through='trener.WorkoutExercise', to='trener.exercise'),
        ),
    ]
